# --- Этап 1: Сборка приложения ---
# Используем официальный образ Node.js как "сборщик"
FROM node:18-slim AS builder

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем package.json и package-lock.json для установки зависимостей
COPY package.json ./

# Устанавливаем зависимости проекта
# Используем 'ci' для более быстрой и надежной установки в CI/CD
RUN npm install

# Копируем остальные файлы проекта
COPY . .

# Собираем production-версию приложения
# Убедитесь, что в вашем package.json есть скрипт "build"
RUN npm run build

# --- Этап 2: Подготовка для Nginx ---
# Этот этап не обязателен, если вы монтируете volume напрямую из сборки,
# но создание именованного образа делает процесс более явным.
# Мы создадим очень маленький образ, который содержит только результат сборки.
FROM alpine:latest

# Копируем собранные файлы из этапа "builder"
# Путь к собранным файлам может быть 'build' или 'dist' в зависимости от конфигурации React
COPY --from=builder /app/dist /usr/share/nginx/html

# Указываем, что этот volume будет использоваться для раздачи статики
VOLUME /usr/share/nginx/html
